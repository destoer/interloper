
import <graphics>

func main() s32
{
    constant X : u32 = 640;
    constant Y : u32 = 480;

    win := gfx::open_window("interloper",X,Y);

    target : s32 = 16;

    // current drawing offset
    draw : u32 = 0;

    colour := cast(u32,std::rand());

    while(!win.quit)
    {
        start := std::timestamp_ms();

        gfx::process_events(&win);

        draw_amt : u32 = cast(u32,win.screen.len / 256);

        for(i : u32 = 0; i < draw_amt && (i + draw) < win.screen.len; i += 1)
        {
            win.screen[draw + i] = colour;
        }

        // goto next block!
        draw += draw_amt;

        if(draw >= win.screen.len)
        {
            colour = cast(u32,std::rand());
            draw = 0;
        }

        gfx::draw_window(&win,win.screen);

        end := std::timestamp_ms();

        taken := cast(s32,end - start);

        sleep := target - taken;

        if(sleep > 0)
        {
            target = 16;
            std::sleep_ms(cast(u32,sleep));
        }

        // overshot the frame
        else
        {
            target = 16 + sleep;
        }
    }

    gfx::close_window(&win);

    return 0;
}