

struct Arena
{
    buf : byte[];

    // how much of the arena have we used
    len : u32;
}


func make_arena(buf : byte[]) Arena
{
    arena : Arena;

    arena.len = 0;
    arena.buf = buf;

    return arena;
}

func allocate(arena : Arena@, size : u32) byte@
{
    // allocation failed
    if(arena.len + size >= arena.buf.len)
    {
        return NULL;
    }

    alloc_ptr : byte@ = &arena.buf[arena.len];
    arena.len += size;

    return alloc_ptr;    
}
