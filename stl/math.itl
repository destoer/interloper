namespace std;

func is_even(v : u64) bool 
{
    return (v & 1) == 0;
}

func min<T>(v1 : T, v2 : T) T
{
    if(v1 < v2)
    {
        return v1;
    }

    return v2;
}

func min_s64(v1 : s64, v2 : s64) s64
{
    return min<s64>(v1,v2);
}

func min_u64(v1 : u64, v2 : u64) u64
{
    return min<u64>(v1,v2);
}

func min_u32(v1 : u32, v2 : u32) u32
{
    return min<u32>(v1,v2);
}

func max<T>(v1 : T, v2 : T) T
{
    if(v1 > v2)
    {
        return v1;
    }

    return v2;
}

func max_s64(v1 : s64, v2 : s64) s64
{
    return max<s64>(v1,v2);
}

func max_u64(v1 : u64, v2 : u64) u64
{
    return max<u64>(v1,v2);
}

func in_range_u64(v : u64,lo : u64, hi : u64) bool
{
    return v >= lo && v <= hi;
}

func in_range_s64(v : u64,lo : u64, hi : u64) bool
{
    return v >= lo && v <= hi;
}


struct Vec2D
{
    x : s64;
    y : s64;
};


func vec2_add(v1: Vec2D, v2: Vec2D) Vec2D
{
    ans: Vec2D = {?};

    ans.x = v1.x + v2.x;
    ans.y = v1.y + v2.y;

    return ans;
}

func print_vec2(v1: Vec2D)
{
    print("vec: {} : {}\n",v1.x,v1.y);
}