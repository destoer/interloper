import <vec>
import <matrix>

namespace std;

func is_even(v : u64) bool 
{
    return (v & 1) == 0;
}

func abs(v1: s64) u64
{
    if(v1 < 0)
    {
        return cast(u64,-v1);
    }

    return cast(u64,v1);
}

func min_s64(v1 : s64, v2 : s64) s64
{
    if(v1 < v2)
    {
        return v1;
    }

    return v2;
}

func min_u64(v1 : u64, v2 : u64) u64
{
    if(v1 < v2)
    {
        return v1;
    }

    return v2;
}

func min_u32(v1 : u32, v2 : u32) u32
{
    if(v1 < v2)
    {
        return v1;
    }

    return v2;
}

func max_s64(v1 : s64, v2 : s64) s64
{
    if(v1 > v2) 
    {
        return v1;
    }

    return v2;
}

func max_u64(v1 : u64, v2 : u64) u64
{
    if(v1 > v2) 
    {
        return v1;
    }

    return v2;
}

func max_f64(v1: f64, v2: f64) f64
{
    if(v1 > v2)
    {
        return v1;
    }

    return v2;
}

func min_f64(v1: f64, v2: f64) f64
{
    if(v1 < v2)
    {
        return v1;
    }

    return v2;
}

func in_range_u64(v : u64,lo : u64, hi : u64) bool
{
    return v >= lo && v <= hi;
}

func in_range_s64(v : s64,lo : s64, hi : s64) bool
{
    return v >= lo && v <= hi;
}

func clamp_s64(v1: s64, min: s64, max: s64) s64
{
    if(v1 < min) 
    {
        return min;
    }

    else if(v1 > max)
    {
        return max;
    }

    return v1;
}


/*
func log10(v: f64) u64

func pow(double: f64,pow: f64) f64
*/