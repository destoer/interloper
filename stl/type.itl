// string type aliases
type_alias c8 = u8;
type_alias string = c8[];

enum builtin_type
{
    u8_t,
    u16_t,
    u32_t,

    s8_t,
    s16_t,
    s32_t,

    byte_t,

    bool_t,

    void_t, 

    null_t,
}

func is_builtin(type_idx : u32) bool
{
    return type_idx < builtin_type.len;
}

//RUNTIME_SIZE : const u32 = 0xfffffff0;

struct Type
{
    type_idx : const u32;

    // specifiers
    is_const : const bool;
};



struct PointerType (type : const Type)
{
    contained_type : const Type@;
};

struct StructType (type : const Type)
{
    struct_idx : const u32;
};

struct EnumType (type : const Type)
{
    enum_idx : const u32;
};


struct ArrayType (type : const Type)
{
    contained_type : const Type@;

    // RUNTIME_SIZE or current size!
    size : const u32;
  
    // size of indexing array
    sub_size : const u32;
};

struct Any
{
    data: byte@;
    type: const Type@;
};