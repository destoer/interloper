

func memcpy(dst: byte@, src: byte@, size: u32)
{
    end : const byte@ = dst + size;

    // just do a simple copy for now
    while(dst != end)
    {
        @dst = @src;
        dst += 1;
        src += 1;
    }
}


func memset(dst: byte@, size : u32, v : u8)
{
    end : const byte@ = dst + size;

    while(dst != end)
    {
        @dst = v;
        dst += 1;
    }    
}

func zero_mem(dst: byte@, size : u32)
{
    memset(dst,size,0);
}

// TODO: await generics
/*
func handle_write<T>(dst: byte@, v : const T)
{
    memcpy(dst,&t,T.size);
}

func handle_read<T>(src: const byte@) T
{
    v : T;
    memcpy(&t,src,T.size);

    return v;
}
*/