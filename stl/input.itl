namespace input;

enum button_t
{
    none,

    a,
    b,
    x,
    y,

    up,
    down,
    left,
    right,

    start,
};

struct Input
{
    map: button_t[256];

    button: u32 = 0;
}

func make_input() Input
{
    input: Input;

    std::os_default_key_map(input.map);

    return input;
}

func set_input(input: Input@, key: u8, pressed: bool)
{
    //std::print("key input: {} : {}\n",key,pressed);
    button := input.map[key];
    set_button(input,button,pressed);  
}

func set_button(input: Input@, type: button_t, pressed: bool)
{
    //std::print("input: {} : {}\n",cast(u32,type),pressed);

    bit := cast(u32,type);
    input.button = (input.button & ~(1 << bit)) | (cast(u32,pressed) << bit);
}

func reset_input(input: Input@)
{
    input.button = 0;
}

func is_pressed(input: const Input@, type: button_t) bool
{
    return std::is_set(input.button,cast(u32,type));
}