
constant BITS_IN_BYTE : u32 = 8;

func is_set(v: u32, bit: u32) bool
{
    return cast(bool,(v >> bit) & 1);
}


func hamming_weight(set: u32) u32
{
    sum : u32 = 0;

    // TODO: add way to query internal type limits
    for(i : u32 = 0; i < (u32.size * BITS_IN_BYTE); i += 1)
    {
        sum += cast(u32,is_set(set,i));
    }

    return sum;
}

func set_bit(v: u32, bit: u32) u32
{
    return v | (1 << bit);
}
