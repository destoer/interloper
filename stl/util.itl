namespace std;

func assert(cond : bool)
{
    if(!cond)
    {
        exit(1);
    }
}

global seed : u64 = cast(u64,time());

// basic LCG
func rand() u64
{
    seed = (6364136223846793005 * seed) + 1442695040888963407; 
    return deset_bit(seed,63);
}

func rand_range_u64(min : u64, max : u64) u64
{
    return (rand() % ((max + 1) - min)) + min;
}

func rand_range_s64(min : s64, max : s64) s64
{
    return (rand() % ((max + 1) - min)) + min;
}


func rand_range_s32(min : s32, max : s32) s32
{
    return cast(s32,rand_range_s32(min,max));
}


func rand_range_u32(min : u32, max : u32) u32
{
    return cast(u32,rand(min,max));
}

func swap_s64(v1: s64@, v2: s64@)
{
    tmp := @v1;
    @v1 = @v2;
    @v2 = tmp;
}