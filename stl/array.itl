
func byte_array_arena(arena : Arena@, size : u64) byte[]
{
    buf : byte[];

    buf.data = alloc_arena_panic(arena,size);
    buf.len = size;

    return buf;
}

func byte_array_heap(heap : Heap@, size : u64) byte[]
{
    buf : byte[];

    buf.data = alloc_heap_panic(heap,size,1);
    buf.len = size;

    return buf;
}

func u32_array_heap(heap : Heap@, size : u64) u32[]
{
    buf : u32[];

    buf.data = cast(u32@,alloc_heap_panic(heap,size,4));
    buf.len = size;

    return buf;
}



func u32_array_arena(arena : Arena@, size : u64) u32[]
{
    buf : u32[];

    bytes := size * u32.size;

    buf.data = cast(u32@,alloc_arena_panic(arena,bytes));
    buf.len = bytes;

    return buf;
}
